{"pages":[{"title":"关于我","permalink":"https://www.miaomiaomiao.info/about/index.html","text":"QQ: 1178574705 邮箱: zyzeng1234@gmail.com"}],"posts":[{"title":"","permalink":"https://www.miaomiaomiao.info/android中遇到的坑总结/","text":"在fragment中，findviewbyid及组件监听事件要写在onactivitycreated方法中，不然会报空指针异常。"},{"title":"","permalink":"https://www.miaomiaomiao.info/服务器端与android登录注册/","text":"Android与服务器端的通信实现登录注册配置服务器环境 首先服务器是搬瓦工的centos6 64位，配置java web环境即配置jdk，安装tomcat以及mysql按照这篇帖子搬瓦工java环境搭建 注意要删除自带的mysql的两个文件夹。 服务器端代码编写 主要写三个方面： 数据库 LoginServlet RegisterServlet 服务器mysql部分首先在服务器的mysql创建一个命名为zeng再创建一个表，命名为user，用来存储android端注册成功的用户信息记得进行授权：123//例如，你想root用户使用mypassword从任何主机连接到mysql服务器的话。GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;服务器mysql密码&apos; WITH GRANT OPTION;FLUSH PRIVILEGES; 配置连接数据库的信息, 12345public static final String DB_USER = &quot;root&quot;;//数据库用户名public static final String DB_PASSWORD = &quot;******&quot;;//数据库密码public static final String DB_DATABASE = &quot;zeng&quot;;//数据库名public static final String DB_URL = &quot;jdbc:mysql://104.243.30.196:3306/zeng&quot;;//jdbc地址:服务器ip+数据库名public static final String DB_JDBC_MYSQL = &quot;com.mysql.jdbc.Driver&quot;;//jdbc mysql 封装数据库jdbc连接方法，创建表以及增删改查的方法 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182public class DBUtils &#123;private Connection connection = null;private Statement statement = null;public DBUtils() &#123;&#125;public DBUtils(String jdbc, String url, String user, String password) &#123; try &#123; Class.forName(jdbc); connection = DriverManager.getConnection(url, user, password); statement = connection.createStatement(); &#125; catch (ClassNotFoundException e) &#123; e.printStackTrace(); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125;&#125;/** * 创建表 * @param createSql */public void createTable(String createSql) &#123; try &#123; statement.execute(createSql); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125;&#125;/** * 插入数据 * @param table * @param columns * @param args * @return */public int insert(String table, String[] columns, String[] args) &#123; if(columns != null &amp;&amp; columns.length == 0) &#123; return -1; &#125; if(args != null &amp;&amp; columns.length != args.length) &#123; return -1; &#125; StringBuilder sql = new StringBuilder(); sql.append(&quot;INSERT INTO &quot;); sql.append(table + &quot;(&quot;); for(int i = 0; i &lt; columns.length - 1;i++) &#123; sql.append(columns[i]); sql.append(&quot;,&quot;); &#125; sql.append(columns[columns.length - 1]); sql.append(&quot;) VALUES(&quot;); for (int i = 0; i &lt; args.length - 1; i++) &#123; sql.append(&quot;?,&quot;); &#125; sql.append(&quot;?)&quot;); ResultSet rs = null; try &#123; PreparedStatement preparedStatement = connection.prepareStatement(sql.toString(),Statement.RETURN_GENERATED_KEYS); for (int i = 1; i &lt;= args.length; i++) &#123; preparedStatement.setString(i, args[i - 1]); &#125; preparedStatement.executeUpdate(); rs = preparedStatement.getGeneratedKeys(); if (rs.next()) &#123; return rs.getInt(1); &#125; &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125;finally &#123; if (rs != null) &#123; try &#123; rs.close(); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125; &#125; &#125; return -1;&#125; 创建数据库管理类DBMannager，包括创建表，对获取的用户email，密码写入数据库。其中要对数据进行json处理5."},{"title":"","permalink":"https://www.miaomiaomiao.info/android备忘录app开发/","text":"android备忘录开发 first day1.需求分析主要用于学生，特别是大学生和研究生经常忘记老师的作业，但他们又不习惯在纸上记录作业。但手机是他们每天必看的，因此设计一款app实现作业记录与提醒并对每科目开放一个聊天室供学习交流。 2.原型设计原型设计由mocplus设计 3.表设计"},{"title":"高级组件","permalink":"https://www.miaomiaomiao.info/android第五天/","text":"进度条组件 布局文件12345678910&lt;ProgressBar android:id=&quot;@+id/progressBar1&quot; style=&quot;@android:style/Widget.ProgressBar.Horizontal&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;25dp&quot; android:layout_alignParentBottom=&quot;true&quot; android:layout_alignParentLeft=&quot;true&quot; android:layout_alignParentStart=&quot;true&quot; android:layout_marginBottom=&quot;60dp&quot; android:max=&quot;100&quot; /&gt; //设置最大值 样式通过style属性进行设置： java代码 使用handler发送消息来控制进度条完成 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152 private ProgressBar horizonP; //水平进度条 private int mProgressStatus = 0; //完成进度 private Handler mHandler; //声明一个用于处理消息的Handler类的对象 @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); //设置全屏显示 horizonP = (ProgressBar) findViewById(R.id.progressBar1); //获取水平进度条 mHandler = new Handler() &#123; @Override public void handleMessage(Message msg) &#123; if (msg.what == 0x111) &#123; horizonP.setProgress(mProgressStatus); //更新进度 &#125; else &#123; Toast.makeText(MainActivity.this, &quot;耗时操作已经完成&quot;, Toast.LENGTH_SHORT).show(); horizonP.setVisibility(View.GONE); //设置进度条不显示，并且不占用空间 &#125; &#125; &#125;; new Thread(new Runnable() &#123; public void run() &#123; while (true) &#123; mProgressStatus = doWork(); //获取耗时操作完成的百分比 Message m = new Message(); if (mProgressStatus &lt; 100) &#123; m.what = 0x111; mHandler.sendMessage(m); //发送信息 &#125; else &#123; m.what = 0x110; mHandler.sendMessage(m); //发送消息 break; &#125; &#125; &#125; //模拟一个耗时操作 private int doWork() &#123; mProgressStatus += Math.random() * 10; //改变完成进度 try &#123; Thread.sleep(200); //线程休眠200毫秒 &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; return mProgressStatus; //返回新的进度 &#125; &#125;).start(); //开启一个线程 &#125;&#125; 拖动条组件1234567&lt;SeekBar android:id=&quot;@+id/seekbar&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:max=&quot;255&quot; //最大值 android:progress=&quot;255&quot; //默认值 /&gt; java代码 实现通过拉动拖动条改变图片透明度：123456789101112131415161718192021222324252627public class MainActivity extends AppCompatActivity &#123; private ImageView image; //定义图片 private SeekBar seekBar; //定义拖动条 @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); image = (ImageView) findViewById(R.id.image); //获取图片 seekBar = (SeekBar) findViewById(R.id.seekbar); //获取拖动条 //为拖动条设置监听事件 seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() &#123; // 当拖动条的滑块位置发生改变时触发该方法 @Override public void onProgressChanged(SeekBar arg0, int progress, boolean fromUser) &#123; // 动态改变图片的透明度 image.setImageAlpha(progress); &#125; @Override public void onStartTrackingTouch(SeekBar bar) &#123; &#125; @Override public void onStopTrackingTouch(SeekBar bar) &#123; &#125; &#125;); &#125;&#125; 图像视图1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980package com.mingrisoft;import android.app.Activity;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.WindowManager;import android.view.animation.AnimationUtils;import android.widget.ImageSwitcher;import android.widget.ImageView;import android.widget.ViewSwitcher;public class MainActivity extends Activity &#123; private int[] arrayPictures = new int[]&#123;R.mipmap.img01, R.mipmap.img02, R.mipmap.img03, R.mipmap.img04, R.mipmap.img05, R.mipmap.img06, R.mipmap.img07, R.mipmap.img08, R.mipmap.img09, &#125;;// 声明并初始化一个保存要显示图像ID的数组 private ImageSwitcher imageSwitcher; // 声明一个图像切换器对象 //要显示的图片在图片数组中的Index private int pictutureIndex; //左右滑动时手指按下的X坐标 private float touchDownX; //左右滑动时手指松开的X坐标 private float touchUpX; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);//设置全屏显示 imageSwitcher = (ImageSwitcher) findViewById(R.id.imageswitcher); // 获取图像切换器 //为ImageSwicher设置Factory，用来为ImageSwicher制造ImageView imageSwitcher.setFactory(new ViewSwitcher.ViewFactory() &#123; @Override public View makeView() &#123; ImageView imageView = new ImageView(MainActivity.this); // 实例化一个ImageView类的对象 imageView.setImageResource(arrayPictures[pictutureIndex]);//根据id加载默认显示图片 return imageView; // 返回imageView对象 &#125; &#125;); imageSwitcher.setOnTouchListener(new View.OnTouchListener() &#123; @Override public boolean onTouch(View v, MotionEvent event) &#123; if (event.getAction() == MotionEvent.ACTION_DOWN) &#123; //取得左右滑动时手指按下的X坐标 touchDownX = event.getX(); return true; &#125; else if (event.getAction() == MotionEvent.ACTION_UP) &#123; //取得左右滑动时手指松开的X坐标 touchUpX = event.getX(); //从左往右，看下一张 if (touchUpX - touchDownX &gt; 100) &#123; //取得当前要看的图片的index pictutureIndex = pictutureIndex == 0 ? arrayPictures.length - 1 : pictutureIndex - 1; //设置图片切换的动画 imageSwitcher.setInAnimation(AnimationUtils.loadAnimation(MainActivity.this, R.anim.slide_in_left)); imageSwitcher.setOutAnimation(AnimationUtils.loadAnimation(MainActivity.this, R.anim.slide_out_right)); //设置当前要看的图片 imageSwitcher.setImageResource(arrayPictures[pictutureIndex]); //从右往左，看上一张 &#125; else if (touchDownX - touchUpX &gt; 100) &#123; //取得当前要看的图片index pictutureIndex = pictutureIndex == arrayPictures.length - 1 ? 0 : pictutureIndex + 1; //设置切换动画 imageSwitcher.setOutAnimation(AnimationUtils.loadAnimation(MainActivity.this, R.anim.slide_out_left)); imageSwitcher.setInAnimation(AnimationUtils.loadAnimation(MainActivity.this, R.anim.slide_in_right)); //设置要看的图片 imageSwitcher.setImageResource(arrayPictures[pictutureIndex]); &#125; return true; &#125; return false; &#125; &#125;); &#125;&#125; 图像切换器"},{"title":"普通组件","permalink":"https://www.miaomiaomiao.info/Android第四天/","text":"日期选择器日期选择器即在需要记录日期的时候弹出日期选择界面，如下图：1234&lt;DatePicker android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt;&lt;/DatePicker&gt; 在java代码中获取所选日期123456789101112131415161718192021datepicker = (DatePicker)findViewById(R.id.xx)Calendar calendar = Calendar.getInstance();//下面的定义为给datePicker.init中初始化的值，当前的年月日year=calendar.get(Calendar.YEAR);mouth=calendar.get(Calendar.mouth);day=calendar.get(Calendar.DAY_OF_MOUTH);datePicker.init(year,mouth,day, new DatePicker.OnDatechangedListener()&#123; public void OnDatechanged(DatePicker view,int year,int mouthofyear,int day of mouth)&#123; MainActivity.this.year=year; //将监听事件中的年月日的值赋给这个activity中 MainActivity.this.month=mouthofyear; //的年月日 MainActivity.this.day=dayofmouth; &#125; &#125;);//定义一个show方法用toast来显示所选年月日private void show(int year,int mouth,int day)&#123; String str= year+&quot;年&quot;+mouth+1+&quot;月&quot;+day+&quot;日&quot;； Toast.makeText(MainActivity.this,strt,Toast.LENGTH_SHOW).show();&#125; 时间选择器如图：123&lt;TimePicker xxxxx&gt;&lt;/TimePicker&gt;"},{"title":"组件","permalink":"https://www.miaomiaomiao.info/Android第三天/","text":"一、编辑框1234567&lt;EditText android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_parent&quot; android:hint=&quot;请输入名字&quot; //输入框中的提示信息 android:drawableLeft=&quot;@mipmap/&quot; //将图像放在mipmap中 android:lines=&quot;5&quot; android:inputType=&quot;textPassword&quot;/&gt; //输入框中密码 属性drawableLeft实现在编辑框中的左侧放置图片如下图： 二、buttom按钮组件 属性： 123android:layout_width=&quot;wrap_parent&quot;android:layout_height=&quot;wrap_parent&quot;android:text=&quot;按钮&quot; 事件监听器 123456Buttom b = (Buttom)findViewById(R.id.xx);b.setOnClickListener(new View.OnClickListener()&#123; public void onclick(View v)&#123; 写事件 &#125; &#125;) 三、ImageButtom图片按钮12android:src=&quot;@mipmap/xx&quot;android:background=&quot;#0000&quot; //设置背景透明，不然图片背景有灰色 四、RadioButton单选按钮和按钮组12android:text=&quot;xx&quot; //单选框后的文字android:checked=&quot;true&quot; //设置默认选中 将多个RadioButton用RadioButtonGroup组括起来才能实现单选的效果，即：123456789&lt;RadioButtonGroup android:id=&quot;@+id/xxx&quot; android:layout_width=&quot;wrap_parent&quot; android:layout_height=&quot;wrap_parent&quot;/&gt; &lt;RadioButton xxx/&gt; &lt;RadioButton xxx/&gt;&lt;/RadioButton&gt; Java代码：`RadioGroup rg = (RadioGroup)findViewById(R.id.xx)rg.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){ public void OnCheckedChange(RadioGroup group,int checkedID){ RadioButton r=(RadioButton)findViewById(checkedID); //通过参数checkedID取出所选单选框 r.getText(); //获取所选单选框的文本内容 } })"},{"title":"布局layout","permalink":"https://www.miaomiaomiao.info/Android第二天/","text":"Android布局一、relativeLayout 相对布局两个属性 android:gravity android:ingnoreGrivaty 组件属性123456android:layout_toLeftOf=&quot;@id/&quot;android:layout_toRightOf=&quot;@id/&quot;android:layout_belowandroid:layout_width=&quot;match_parent&quot; 匹配父控件宽度即relativeLayout。android:layout_alignParentRight=&quot;true&quot; 与父控件右端对齐android:layout_marginRight=&quot;50dp&quot; 并与右边相距50dp 二、LinearLayout 线性布局管理器两个属性12345android:orientation=&quot;vertical&quot;android:orientation=&quot;horizontal&quot;android:gravity=“center”android:gravity=“right” “right|bottom” //右下android:paddingBottom=&quot;20dp&quot;整个布局器占手机荧幕的边距。 前两个是指里面组件（如4个按钮）的排列方式为水平或垂直。gravity为里面组件整体所在的位置排列。如设为center则里面的按钮都在中间 三、FrameLayout 帧布局管理器两个属性12android:foreground //设置一个覆盖于前端的图片android:foregroundLayout 四、GridLayout 网格布局管理器两个属性123android:columnCount=“2” //指定网格最大列数，如5个按钮，设置为2，则2个换行android:orientation //不设置默认水平排列android:rowCount 组件内属性1234android:layout_columnandroid:layout_row 手动操作每个组件位于第几行几列android:layout_rowspanandroid:layout_gravity=&quot;fill&quot; 这两条表示跨行显示 五、布局管理器的嵌套"},{"title":"Android界面基础","permalink":"https://www.miaomiaomiao.info/Android第一天/","text":"Android界面UI控制Android界面控制 xml布局文件配置 java代码中控制 混合控制 自定义view xml布局文件配置： Android工程目录的res/layout中编写xml(activity_main)布局文件 然后在activity中使用java代码显示xml布局文件 1setContentView(R.layout.activity_main) oncreate方法是activity页面创建时执行的方法。 完全使用java代码控制界面 用的较少 混合控制 少 总结安卓界面主要分工给xml配置文件来写，实现java代码主要实现业务逻辑，xml主要用于界面。"},{"title":"Tomcat服务器在eclipse中的配置","permalink":"https://www.miaomiaomiao.info/j2ee第一天/","text":"Tomcat服务器在eclipse中的配置 new-&gt;other-&gt;Dynamic Web Project 选择Tomcat服务器 工程目录如下： 在web-inf目录中创建web.xml，web-inf中的lib文件夹中存放需要用到的jar库，如servlet-api.jar等。"},{"title":"毕业前的暴饮暴食","permalink":"https://www.miaomiaomiao.info/愉快的一天/","text":"果然第二天拉肚子"},{"title":"P5天下第一!","permalink":"https://www.miaomiaomiao.info/P5天下第一/","text":"没什么好说的，p5天下第一"},{"title":"Hello World","permalink":"https://www.miaomiaomiao.info/hello-world/","text":""}]}